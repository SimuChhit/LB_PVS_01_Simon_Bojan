

services:
  stock-publisher:
    image: towak/stock-publisher:latest
    container_name: stock-publisher
    restart: always
    environment:
      - RABBITMQ_URL=amqp://user:user@rabbitmq:5672/
    networks:
      - mongo_cluster

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Web-UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    networks:
      - mongo_cluster

  mongo1:
    image: mongo:7.0
    container_name: mongo1
    restart: always
    ports:
      - 27017:27017
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo1_data:/data/db
      - mongo1_config:/data/configdb
    networks:
      - mongo_cluster

  mongo2:
    image: mongo:7.0
    container_name: mongo2
    restart: always
    ports:
      - 27018:27018
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo2_data:/data/db
      - mongo2_config:/data/configdb
    networks:
      - mongo_cluster

  mongo3:
    image: mongo:7.0
    container_name: mongo3
    restart: always
    ports:
      - 27019:27019
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo3_data:/data/db
      - mongo3_config:/data/configdb
    networks:
      - mongo_cluster

  consumer-tsla:
    image: simonchhit/consumer:latest
    container_name: consumer-tsla
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: TSLA
      RABBITMQ_USER: user
      RABBITMQ_PASS: user
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      MONGODB_DATABASE: stockmarket
      MONGODB_COLLECTION: stock
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_cluster

  consumer-aapl:
    image: simonchhit/consumer:latest
    container_name: consumer-aapl
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: AAPL
      RABBITMQ_USER: user
      RABBITMQ_PASS: user
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      MONGODB_DATABASE: stockmarket
      MONGODB_COLLECTION: stock
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_cluster

  consumer-msft:
    image: simonchhit/consumer:latest
    container_name: consumer-msft
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: MSFT
      RABBITMQ_USER: user
      RABBITMQ_PASS: user
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      MONGODB_DATABASE: stockmarket
      MONGODB_COLLECTION: stock
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_cluster

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mongo_cluster
    depends_on:
      - consumer-tsla
      - consumer-aapl 
      - consumer-msft
      - frontend1
      - frontend2

  frontend1:
    image: towak/stock-liveview:latest
    container_name: frontend1
    restart: always
    environment:
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      MONGODB_DATABASE: stockmarket
      MONGODB_COLLECTION: stock
    networks:
      - mongo_cluster
    expose:
      - "3000"
    ports:
      - "3001:3000"

  frontend2:
    image: towak/stock-liveview:latest
    container_name: frontend2
    restart: always
    environment:
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      MONGODB_DATABASE: stockmarket
      MONGODB_COLLECTION: stock
    networks:
      - mongo_cluster
    expose:
      - "3000"
    ports:
      - "3002:3000"

volumes:
  mongo1_data:
  mongo1_config:
  mongo2_data:
  mongo2_config:
  mongo3_data:
  mongo3_config:

networks:
  mongo_cluster:
    driver: bridge
