services:
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # Standard RabbitMQ Port (für Producer/Consumer)
      - "15672:15672"  # Management UI Port (zur Überwachung)
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user

  # MongoDB als ReplicaSet Cluster
  mongodb0:
    image: mongo:4.4
    container_name: mongodb0
    command: --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data/db0:/data/db
    networks:
      - mongo-cluster

  mongodb1:
    image: mongo:4.4
    container_name: mongodb1
    command: --replSet rs0 --bind_ip_all
    volumes:
      - ./mongo-data/db1:/data/db
    networks:
      - mongo-cluster

  mongodb2:
    image: mongo:4.4
    container_name: mongodb2
    command: --replSet rs0 --bind_ip_all
    volumes:
      - ./mongo-data/db2:/data/db
    networks:
      - mongo-cluster

  # Initialisieren des ReplicaSets
  mongo-setup:
    image: mongo:4.4
    container_name: mongo-setup
    depends_on:
      - mongodb0
      - mongodb1
      - mongodb2
    networks:
      - mongo-cluster
    command: >
      bash -c "sleep 10 && 
      mongo --host mongodb0:27017 <<EOF
        rs.initiate({
          _id: 'rs0',
          members: [
            { _id: 0, host: 'mongodb0:27017' },
            { _id: 1, host: 'mongodb1:27017' },
            { _id: 2, host: 'mongodb2:27017' }
          ]
        })
        EOF"

  # Producer (Stock-Publisher)
  stock-publisher:
    image: towak/stock-publisher:latest
    container_name: stock-publisher
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq  # RabbitMQ wird über den Service-Namen referenziert
      RABBITMQ_PORT: 5672       # Standard RabbitMQ Port
    depends_on:
      - rabbitmq

  # Consumer (Einfaches Python-Skript)
  consumer:
    image: python:3.11-alpine
    container_name: consumer
    volumes:
      - ./consumer:/app  # Verknüpfe das lokale Verzeichnis für den Consumer-Code
    working_dir: /app
    command: python consumer.py
    depends_on:
      - rabbitmq
      - mongodb0
      - mongodb1
      - mongodb2
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      MONGODB_URI: mongodb://mongodb0:27017,mongodb1:27017,mongodb2:27017/?replicaSet=rs0
      MONGODB_DATABASE: finance
      MONGODB_COLLECTION: averages

networks:
  mongo-cluster:
    driver: bridge
