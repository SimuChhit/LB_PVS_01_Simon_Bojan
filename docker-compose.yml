version: '3.8'

services:

  stock-publisher:
    image: towak/stock-publisher:latest
    container_name: stock-publisher
    restart: always
    environment:
      - RABBITMQ_URL=amqp://user:user@rabbitmq:5672/

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # Standard RabbitMQ Port (für Producer/Consumer)
      - "15672:15672"  # Management UI Port (zur Überwachung)
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user

  # MongoDB Instanzen
  mongo1:
    image: mongo:7.0
    container_name: mongo1
    restart: always
    ports:
      - 27017:27017
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
 
  mongo2:
    image: mongo:7.0
    container_name: mongo2
    restart: always
    ports:
      - 27018:27017
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"
 
  mongo3:
    image: mongo:7.0
    container_name: mongo3
    restart: always
    ports:
      - 27019:27017
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"
 
  # Consumer für TSLA
  consumer-tsla:
    image: simonchhit/consumer:latest
    container_name: consumerMFST-tsla
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: TSLA
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=rs0
      MONGODB_DATABASE: finance
      MONGODB_COLLECTION: aggregated_prices
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_cluster

  # Consumer für AAPL
  consumer-aapl:
    image: simonchhit/consumer:latest
    container_name: consumerMFST-aapl
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: AAPL
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=rs0
      MONGODB_DATABASE: finance
      MONGODB_COLLECTION: aggregated_prices
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_cluster

  # Frontend
  frontend:
    image: simonchhit/frontend:latest
    container_name: frontend
    ports:
      - "80:80"
    environment:
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=rs0
      MONGODB_DATABASE: finance
      MONGODB_COLLECTION: aggregated_prices
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_cluster

volumes:
  mongo1_data:
  mongo1_config:
  mongo2_data:
  mongo2_config:
  mongo3_data:
  mongo3_config:

networks:
  mongo_cluster:
    driver: bridge